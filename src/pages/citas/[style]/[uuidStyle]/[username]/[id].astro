---
import { ViewTransitions } from "astro:transitions";
import PlainLayout from "../../../../../layouts/PlainLayout.astro";
import { getBarbers } from "../../../../../services/BarbersServices";
import Barbers from "../../../../../components/Sections/Barbers.astro";
const { style, uuidStyle, username, id } = Astro.params;

const barbers = await getBarbers();
const barberOptions: Barbers[] = barbers.filter((barber: Barbers) => barber.available).map((barber: Barbers) => barber.firstName + " " + barber.lastName);
---

<PlainLayout
  title="Reserva tu cita"
  description="Agenda tu cita con el barbero de tu confianza"
>
  <section class="w-full flex min-h-screen">
    <div class="container flex flex-col m-auto px-4 md:px-6">
      <div class="grid items-center gap-6 lg:grid-cols-2 lg:gap-12">
        <div class="space-y-4">
          <div
            class="inline-block rounded-lg bg-gray-100 px-3 py-1 text-sm font-semibold text-gray-800 dark:bg-gray-800 dark:text-gray-100"
          >
            Reserva tu cita
          </div>
          <h2
            class="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl"
          >
            Agenda tu cita con el barbero de tu confianza
          </h2>
          <p class="max-w-[600px] text-gray-500 md:text-xl dark:text-gray-400">
            Elige la fecha y hora que mejor se adapte a tu agenda, y selecciona
            al barbero que más te guste. ¡Confirma tu cita y disfruta de un
            excelente servicio!
          </p>
        </div>

        <form class="space-y-4">
          <div>
            <label
              for="date-time"
              class="block text-sm font-medium text-gray-700"
            >
              Fecha y hora
            </label>
            <input
              type="datetime-local"
              id="date-time"
              name="date-time"
              required
              class="h-10 block w-full px-3 py-2 text-sm border border-input rounded-md bg-background text-gray-700 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2"
            />
          </div>
          <div>
            <label
              for="date-time"
              class="block text-sm font-medium text-gray-700"
            >
              Selecciona el barbero
            </label>
            <select
              id="barber"
              name="barber"
              required
              class="h-10 block w-full px-3 py-2 text-sm border border-input rounded-md bg-background text-gray-700 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2"
            >
              <option value="" disabled selected>
                Selecciona un barbero
              </option>
              {barberOptions.map((barber: Barbers) => (
                <option value={barber.uuid!}>{barber}</option>
              ))}
            </select>
          </div>

          <button
            class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2 w-full"
            type="submit"
          >
            Confirmar cita
          </button>
        </form>
      </div>
    </div>
  </section>
</PlainLayout>

<script>
  // Obtener el elemento del campo de fecha
  var fechaInput = document.getElementById("date-time") as HTMLInputElement;

  // Función para verificar si la fecha seleccionada es un sábado o domingo
  function verificarFecha() {
    var selectedDate = new Date(fechaInput.value);
    var dayOfWeek = selectedDate.getDay(); // 0 para domingo, 6 para sábado

    // Si es sábado (6) o domingo (0), mostrar un mensaje de error y restablecer el valor del campo de fecha
    if (dayOfWeek === 6 || dayOfWeek === 0) {
      alert("No se pueden seleccionar sábados ni domingos.");
      fechaInput.value = ""; // Restablecer el valor del campo de fecha
    }
  }

  // Agregar un event listener para detectar cambios en el campo de fecha
  fechaInput.addEventListener("change", verificarFecha);
</script>
